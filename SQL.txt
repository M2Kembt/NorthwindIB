SET SQL DIALECT 3;

/* CREATE DATABASE '127.0.0.1/instance2020:C:\Users\Mary Kelly\Desktop\Databases\Northwind.ib' USER 'SYSDBA' password 'Enter_Password_here' PAGE_SIZE 4096
; */
COMMIT;
/*CONNECT '127.0.0.1/instance2020:C:\Users\Mary Kelly\Desktop\Databases\Northwind.ib' USER 'SYSDSO' PASSWORD 'Enter_Password_here'; */
/* ALTER DATABASE SET SYSTEM ENCRYPTION PASSWORD 'Enter_Password_here';*/
COMMIT;
/*CONNECT '127.0.0.1/instance2020:C:\Users\Mary Kelly\Desktop\Databases\Northwind.ib' USER 'SYSDBA' PASSWORD 'Enter_Password_here'; */

/* Table: Categories, Owner: SYSDBA */
CREATE TABLE "Categories" 
(
        CATEGORYID	INTEGER NOT NULL,
        CATEGORYNAME	VARCHAR(20) NOT NULL,
        "DESCRIPTION"	BLOB SUB_TYPE TEXT SEGMENT SIZE 2000,
        PICTURE	BLOB SUB_TYPE 0 SEGMENT SIZE 2000,
CONSTRAINT "PK_Categories" PRIMARY KEY (CATEGORYID)
);

/* Table: CustomerCustomerDemo, Owner: SYSDBA */
CREATE TABLE "CustomerCustomerDemo" 
(
        CUSTOMERID	VARCHAR(5) NOT NULL,
        CUSTOMERTYPEID	VARCHAR(10) NOT NULL,
CONSTRAINT "PK_CustomerCustomerDemo" PRIMARY KEY (CUSTOMERID, CUSTOMERTYPEID)
);

/* Table: CustomerDemographics, Owner: SYSDBA */
CREATE TABLE "CustomerDemographics" 
(
        CUSTOMERTYPEID	VARCHAR(10) NOT NULL,
        CUSTOMERDESC	BLOB SUB_TYPE TEXT SEGMENT SIZE 2000,
CONSTRAINT "PK_CustomerDemographics" PRIMARY KEY (CUSTOMERTYPEID)
);

/* Table: Customers, Owner: SYSDBA */
CREATE TABLE "Customers" 
(
        CUSTOMERID	VARCHAR(5) NOT NULL,
        COMPANYNAME	VARCHAR(40) NOT NULL,
        CONTACTNAME	VARCHAR(30),
        CONTACTTITLE	VARCHAR(30),
        ADDRESS	VARCHAR(60),
        CITY	VARCHAR(15),
        REGION	VARCHAR(15),
        POSTALCODE	VARCHAR(10),
        COUNTRY	VARCHAR(15),
        PHONE	VARCHAR(24),
        FAX	VARCHAR(24),
CONSTRAINT "PK_Customers" PRIMARY KEY (CUSTOMERID)
);

/* Table: EmployeeTerritories, Owner: SYSDBA */
CREATE TABLE "EmployeeTerritories" 
(
        EMPLOYEEID	INTEGER NOT NULL,
        TERRITORYID	VARCHAR(20) NOT NULL,
CONSTRAINT "PK_EmployeeTerritories" PRIMARY KEY (EMPLOYEEID, TERRITORYID)
);

/* Table: Employees, Owner: SYSDBA */
CREATE TABLE "Employees" 
(
        EMPLOYEEID	INTEGER NOT NULL,
        LASTNAME	VARCHAR(20) NOT NULL,
        FIRSTNAME	VARCHAR(10) NOT NULL,
        TITLE	VARCHAR(30),
        TITLEOFCOURTESY	VARCHAR(25),
        BIRTHDATE	DATE,
        HIREDATE	DATE,
        ADDRESS	VARCHAR(60),
        CITY	VARCHAR(15),
        REGION	VARCHAR(15),
        POSTALCODE	VARCHAR(10),
        COUNTRY	VARCHAR(15),
        HOMEPHONE	VARCHAR(24),
        EXTENSION	VARCHAR(4),
        PHOTO	BLOB SUB_TYPE 0 SEGMENT SIZE 2000,
        NOTES	BLOB SUB_TYPE TEXT SEGMENT SIZE 2000,
        REPORTSTO	INTEGER,
        PHOTOPATH	VARCHAR(255),
CONSTRAINT "PK_Employees" PRIMARY KEY (EMPLOYEEID)
);

/* Table: Order Details, Owner: SYSDBA */
CREATE TABLE "Order Details" 
(
        ORDERID	INTEGER NOT NULL,
        PRODUCTID	INTEGER NOT NULL,
        UNITPRICE	NUMERIC(18, 4),
        QUANTITY	SMALLINT DEFAULT 1 NOT NULL,
        DISCOUNT	FLOAT DEFAULT 0 NOT NULL,
CONSTRAINT "PK_OrderDetails" PRIMARY KEY (ORDERID, PRODUCTID)
);

/* Table: Orders, Owner: SYSDBA */
CREATE TABLE "Orders" 
(
        ORDERID	INTEGER NOT NULL,
        CUSTOMERID	VARCHAR(5),
        EMPLOYEEID	INTEGER,
        ORDERDATE	DATE,
        REQUIREDDATE	DATE,
        SHIPPEDDATE	DATE,
        SHIPVIA	INTEGER,
        FREIGHT	NUMERIC(18, 4) DEFAULT 0,
        SHIPNAME	VARCHAR(40),
        SHIPADDRESS	VARCHAR(60),
        SHIPCITY	VARCHAR(35),
        SHIPREGION	VARCHAR(15),
        SHIPPOSTALCODE	VARCHAR(10),
        SHIPCOUNTRY	VARCHAR(15),
CONSTRAINT "PK_Orders" PRIMARY KEY (ORDERID)
);

/* Table: Products, Owner: SYSDBA */
CREATE TABLE "Products" 
(
        PRODUCTID	INTEGER NOT NULL,
        PRODUCTNAME	VARCHAR(40) NOT NULL,
        SUPPLIERID	INTEGER,
        CATEGORYID	INTEGER,
        QUANTITYPERUNIT	VARCHAR(20),
        UNITPRICE	NUMERIC(18, 4),
        UNITSINSTOCK	SMALLINT DEFAULT 0,
        UNITSONORDER	SMALLINT DEFAULT 0,
        REORDERLEVEL	SMALLINT DEFAULT 0,
        DISCONTINUED	BOOLEAN DEFAULT 0 NOT NULL,
CONSTRAINT "PK_Products" PRIMARY KEY (PRODUCTID)
);

/* Table: Region, Owner: SYSDBA */
CREATE TABLE "Region" 
(
        REGIONID	INTEGER NOT NULL,
        REGIONDESCRIPTION	VARCHAR(60) NOT NULL,
CONSTRAINT "PK_Region" PRIMARY KEY (REGIONID)
);

/* Table: Shippers, Owner: SYSDBA */
CREATE TABLE "Shippers" 
(
        SHIPPERID	INTEGER NOT NULL,
        COMPANYNAME	VARCHAR(40) NOT NULL,
        PHONE	VARCHAR(24),
CONSTRAINT "PK_Shippers" PRIMARY KEY (SHIPPERID)
);

/* Table: Suppliers, Owner: SYSDBA */
CREATE TABLE "Suppliers" 
(
        SUPPLIERID	INTEGER NOT NULL,
        COMPANYNAME	VARCHAR(40) NOT NULL,
        CONTACTNAME	VARCHAR(30),
        CONTACTTITLE	VARCHAR(30),
        ADDRESS	VARCHAR(60),
        CITY	VARCHAR(15),
        REGION	VARCHAR(15),
        POSTALCODE	VARCHAR(10),
        COUNTRY	VARCHAR(15),
        PHONE	VARCHAR(24),
        FAX	VARCHAR(24),
        HOMEPAGE	BLOB SUB_TYPE TEXT SEGMENT SIZE 2000,
CONSTRAINT "PK_Suppliers" PRIMARY KEY (SUPPLIERID)
);

/* Table: Territories, Owner: SYSDBA */
CREATE TABLE "Territories" 
(
        TERRITORYID	VARCHAR(20) NOT NULL,
        TERRITORYDESCRIPTION	VARCHAR(52) NOT NULL,
        REGIONID	INTEGER NOT NULL,
CONSTRAINT "PK_Territories" PRIMARY KEY (TERRITORYID)
);

/*  Index definitions for all user tables */

CREATE INDEX "I_CustCustDemo_CustomerID" ON "CustomerCustomerDemo"(CUSTOMERID);
CREATE INDEX "I_CustCustDemo_CustomerTypeID" ON "CustomerCustomerDemo"(CUSTOMERTYPEID);
CREATE INDEX "I_EmplTerrit_EmployeeID" ON "EmployeeTerritories"(EMPLOYEEID);
CREATE INDEX "I_EmplTerrit_TerritoryID" ON "EmployeeTerritories"(TERRITORYID);
CREATE INDEX "I_Employees_ReportsTo" ON "Employees"(REPORTSTO);
CREATE INDEX "I_OrderDetails_OrderID" ON "Order Details"(ORDERID);
CREATE INDEX "I_OrderDetails_ProductID" ON "Order Details"(PRODUCTID);
CREATE INDEX "I_OrderDetails_EmployeeID" ON "Orders"(EMPLOYEEID);
CREATE INDEX "I_Orders_CustomerID" ON "Orders"(CUSTOMERID);
CREATE INDEX "I_Orders_ShipVia" ON "Orders"(SHIPVIA);
CREATE INDEX "I_Products_CategoryID" ON "Products"(CATEGORYID);
CREATE INDEX "I_Products_SupplierID" ON "Products"(SUPPLIERID);
CREATE INDEX "I_Territories_RegionID" ON "Territories"(REGIONID);
ALTER TABLE "CustomerCustomerDemo" ADD CONSTRAINT "FK_CustCustDemo_CustDemogr" FOREIGN KEY (CUSTOMERTYPEID) REFERENCES "CustomerDemographics" (CUSTOMERTYPEID);
ALTER TABLE "CustomerCustomerDemo" ADD CONSTRAINT "FK_CustCustDemo_Customers" FOREIGN KEY (CUSTOMERID) REFERENCES "Customers" (CUSTOMERID);
ALTER TABLE "EmployeeTerritories" ADD CONSTRAINT "FK_EmplTerrit_Employees" FOREIGN KEY (EMPLOYEEID) REFERENCES "Employees" (EMPLOYEEID);
ALTER TABLE "EmployeeTerritories" ADD CONSTRAINT "FK_EmployeeTerritories_Terr" FOREIGN KEY (TERRITORYID) REFERENCES "Territories" (TERRITORYID);
ALTER TABLE "Employees" ADD CONSTRAINT "FK_Employees_Employees" FOREIGN KEY (REPORTSTO) REFERENCES "Employees" (EMPLOYEEID);
ALTER TABLE "Order Details" ADD CONSTRAINT "FK_OrderDetails_Orders" FOREIGN KEY (ORDERID) REFERENCES "Orders" (ORDERID);
ALTER TABLE "Order Details" ADD CONSTRAINT "FK_OrderDetails_Products" FOREIGN KEY (PRODUCTID) REFERENCES "Products" (PRODUCTID);
ALTER TABLE "Orders" ADD CONSTRAINT "FK_Orders_Customers" FOREIGN KEY (CUSTOMERID) REFERENCES "Customers" (CUSTOMERID);
ALTER TABLE "Orders" ADD CONSTRAINT "FK_Orders_Employees" FOREIGN KEY (EMPLOYEEID) REFERENCES "Employees" (EMPLOYEEID);
ALTER TABLE "Orders" ADD CONSTRAINT "FK_Orders_Shippers" FOREIGN KEY (SHIPVIA) REFERENCES "Shippers" (SHIPPERID);
ALTER TABLE "Products" ADD CONSTRAINT "FK_Products_Categories" FOREIGN KEY (CATEGORYID) REFERENCES "Categories" (CATEGORYID);
ALTER TABLE "Products" ADD CONSTRAINT "FK_Products_Suppliers" FOREIGN KEY (SUPPLIERID) REFERENCES "Suppliers" (SUPPLIERID);
ALTER TABLE "Territories" ADD CONSTRAINT FK_TERRITORIES_REGION FOREIGN KEY (REGIONID) REFERENCES "Region" (REGIONID);

CREATE GENERATOR GEN_SEQ;
/* Subscriptions */
SET AUTODDL OFF;
SET AUTODDL ON;
COMMIT;
COMMIT WORK;

/* Stored procedures */

COMMIT WORK;

/* Triggers only will work for SQL triggers */

CREATE TRIGGER "TR_Categories" FOR "Categories" 
ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
  IF (NEW.CATEGORYID IS NULL) THEN
    NEW.CATEGORYID = GEN_ID( GEN_SEQ, 1);
END
 ;

CREATE TRIGGER "TR_employees" FOR "Employees" 
ACTIVE BEFORE INSERT POSITION 0
as
BEGIN
  IF (NEW.EMPLOYEEID IS NULL) THEN
    NEW.EMPLOYEEID = GEN_ID( GEN_SEQ, 1);
END
 ;

CREATE TRIGGER "TR_Orders" FOR "Orders" 
ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
  IF (NEW.ORDERID IS NULL) THEN
    NEW.ORDERID = GEN_ID( GEN_SEQ, 1);
END
 ;

CREATE TRIGGER "TR_Products" FOR "Products" 
ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
  IF (NEW.PRODUCTID IS NULL) THEN
    NEW.PRODUCTID = GEN_ID( GEN_SEQ, 1);
END
 ;

CREATE TRIGGER "TR_Shippers" FOR "Shippers" 
ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
  IF (NEW.SHIPPERID IS NULL) THEN
    NEW.SHIPPERID = GEN_ID( GEN_SEQ, 1);
END
 ;

CREATE TRIGGER "TR_Suppliers" FOR "Suppliers" 
ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
  IF (NEW.SUPPLIERID IS NULL) THEN
    NEW.SUPPLIERID = GEN_ID( GEN_SEQ, 1);
END
 ;

COMMIT WORK ;

/* Grant Roles for this database */


/* Grant permissions for this database */


/* Meta data descriptions.  This syntax requires InterBase 2020 or higher.  Some tables require ODS18 and higher */

